{"version":3,"file":"single-elimination-demo.min.js","sources":["../../demo-src/stringify-replacer.js","../../../js/get-bracket-params.js","../../../js/src/round-namer.js","../../../js/get-match-status.js","../../../js/single-elimination-brackets.js","../../../js/src/drag-scroller.js","../../../js/src/nav.js","../single-elimination-demo.js","../../demo-src/brackets-data-generator.js","../../../js/build-first-round.js","../../../js/src/calcolo-TdS.js","../../../js/src/shuffle-array.js"],"sourcesContent":["export default function (data) {\n\n  const replacer = (key, value) => {\n    // Filtering out properties\n    if (['custom_matches', 'p', 's'].indexOf(key) !== -1\n      && value !== null\n      && typeof value === 'object'\n    ) {\n      return '||' + JSON.stringify(value) + '||';\n    }\n    return value;\n  };\n\n  return JSON.stringify(data, replacer, 1)\n    .replace(/\"(.*?)\":/g, '<span class=\"json-key\">$1:</span>')\n    .replace(/,([\\d,[])/g, ', $1')\n    .replace(/\"\\|\\|/g, '')\n    .replace(/\\|\\|\"/g, '');\n}\n","// calcola e restituisce una serie di parametri del tabellone\n\nexport default function (opts) { // get_bracket_params\n\n  const default_opts = {\n    num_iscritti: 0\n  };\n\n  opts = Object.assign({}, default_opts, opts);\n  let bracket_params =  {\n    num_rounds        : Math.ceil(Math.log2(opts.num_iscritti)),\n    num_players       : 0,\n    matches_round1    : 0,\n    num_bye           : 0\n  };\n  bracket_params.num_players = Math.pow(2, bracket_params.num_rounds);\n  bracket_params.matches_round1 = bracket_params.num_players / 2;\n  bracket_params.num_bye = bracket_params.num_players - opts.num_iscritti;\n\n  return bracket_params;\n}\n\n// determina alcuni dati del match dato\nexport function get_match_params(match, bracket_params) {\n  let match_params = {\n    child_match : Math.ceil(match.m / 2) + bracket_params.matches_round1,\n    next_round  : match.r + 1\n  };\n  if(match_params.next_round > bracket_params.num_rounds) {\n    match_params = {\n      child_match : null,\n      next_round  : null\n    };\n  }\n  return match_params;\n}\n","export default (current_round, tot_rounds) => {\n  let round_name;\n  switch (tot_rounds - current_round) {\n    case 0:\n      round_name = 'Finale';\n      break;\n\n    case 1:\n      round_name = 'Semifinale';\n      break;\n\n    case 2:\n      round_name = 'Quarti di finale';\n      break;\n\n    case 3:\n      round_name = 'Ottavi di finale';\n      break;\n\n    default:\n      round_name = '';\n      break;\n  }\n  return round_name;\n};\n","// restituisce un array di status del match dato\n\nexport default function (match) {\n  let status = {};\n  if(match) {\n    status = {\n      isBye: [\n        // player1 mancante\n        match.p.length === 2 && match.p[0] === null && match.p[1] !== null &&\n        (match.w === match.p[1] || match.w === 0), // match.w === 0 => noshow del player 2\n\n        // player2 mancante\n        (match.p.length === 1 || (match.p.length === 2 && match.p[1] === null)) &&\n        match.p[0] !== null &&\n        (match.w === match.p[0] || match.w === 0) // match.w === 0 => noshow del player 1\n      ],\n      isPlayed: match.w !== null,\n\n      winnerIdx: null // indice del giocatore in match.p vincente\n    };\n\n    // noshow: quando un giocatore non si presenta\n    // il noshow è identificato dal fatto che i giocatori sono 2, lo score è vuoto\n    // e il winner è impostato\n    status.isNoshow = [\n      // noshow player 1\n      !status.isBye[0] &&\n      match.p.length === 2 && match.p[0] !== null && match.p[1] !== null &&\n      match.s.length === 0 &&\n      match.w === match.p[1],\n\n      // noshow player 2\n      !status.isBye[1] &&\n      match.p.length === 2 && match.p[0] !== null && match.p[1] !== null &&\n      match.s.length === 0 &&\n      match.w === match.p[0]\n    ];\n\n    status.isDoubleNoshow = !status.isBye[0] && !status.isBye[1] &&\n      match.p.length === 2 && match.p[0] !== null && match.p[1] !== null &&\n      match.s.length === 0 &&\n      match.w === 0;\n\n    // noshow con bye dell'altro giocatore\n    if(status.isBye[1] && match.w === 0) {\n      status.isNoshow[0] = true;\n    }\n    if(status.isBye[0] && match.w === 0) {\n      status.isNoshow[1] = true;\n    }\n\n    if(status.isDoubleNoshow) {\n      status.isNoshow[0] = true;\n      status.isNoshow[1] = true;\n    }\n\n\n    // true se il match è stato composto in modo definitivo\n    status.defined = (match.p.length === 2 && match.p[0] !== null && match.p[1] !== null) ||\n      status.isBye[0] || status.isBye[1];\n\n\n    if (match.p[0] && match.w !== null && match.p[0] === match.w) {\n      status.winnerIdx = 0;\n\n    } else if (match.p[1] && match.w !== null && match.p[1] === match.w) {\n      status.winnerIdx = 1;\n\n    // queste non dovrebbero verificarsi perché il winner è solitamente impostato\n    // salvo che per i match non completamente definiti\n    // (= una delle due partore precedenti non ancora svolta)\n    } else if(match.p[0] && match.w !== null &&\n      !status.isNoshow[0] && !status.isBye[0] && (status.isBye[1] || status.isNoshow[1])) {\n      status.winnerIdx = 0;\n\n    } else if (match.p[1] && match.w !== null &&\n        !status.isNoshow[1] && !status.isBye[1] && (status.isBye[0] || status.isNoshow[0])) {\n      status.winnerIdx = 1;\n    }\n\n  }\n\n  return status;\n}\n","/*\n  Generazione brackets eliminazione diretta\n*/\n\nimport round_namer from './src/round-namer';\nimport get_match_status from './get-match-status';\nimport get_bracket_params, {get_match_params} from './get-bracket-params';\nimport drag_scroller from './src/drag-scroller';\nimport nav from './src/nav';\n\n/*\n  opts: {\n    container: dom element,\n    members: array,\n    matches: array,\n    config:  object, // configurazioni torneo\n  }\n*/\nexport default function(opts) {\n\n  /*\n    config:\n    ------------------------------\n    show_seeded         : se true, le teste di serie sono evidenziate\n    noshow_icon         : se presente mostra l'icona indicata nei no-show\n    match_callback      : funzione richiamata quando si fa clic su un match\n    match_cbk_selector  : selettore dei match a cui applicare il callback\n    player_callback     : funzione richiamata quando si fa clic su un player\n    player_cbk_selector : selettore dei player a cui applicare il callback\n    extra_info          : se true, al markup vengono aggiunte classi e attributi\n                          data-* non necessari per la visualizzazione ma utili\n                          ma per l'editing e la gestione dei dati\n\n    Se sia `match_callback` che `player_callback` sono presenti,\n    `player_callback` prevale\n\n    All'elemento target è aggiunta la classe `brk-has-cbk`\n\n    Entrambe le funzioni sono invocate avendo come argomento il target\n\n  */\n  const default_config = {\n    show_seeded         : false, // modificabile da config torneo\n    noshow_icon         : null,\n    bracket_callback    : null,\n    match_cbk_selector  : '.brk-match-wrapper:not(.brk-undef) .brk-match',\n    player_callback     : null,\n    player_cbk_selector : '.brk-match-player:not([data-pid=\"\"])',\n    extra_info          : false\n  };\n\n\n  opts.config = Object.assign({}, default_config, opts.config || {});\n\n  const num_rounds = Math.ceil(Math.log2(opts.members.length));\n  // num_players_round_1 = Math.pow(2, params.num_rounds);\n\n  opts.container.innerHTML = '';\n  opts.container.insertAdjacentHTML('afterbegin',\n    `<div class=\"brk-outer-wrapper\">\n      <div class=\"brk-container\">\n        <div class=\"brk-wrapper\"></div>\n      </div>\n    </div>`\n  );\n\n  const bracket_container = opts.container.querySelector('.brk-wrapper'),\n    bracket_params = get_bracket_params({ num_iscritti: opts.members.length }),\n\n    brackets = match => { // elemento base singola partita\n\n      let match_status = get_match_status(match),\n        bracket_title = `Round ${match.r} / Match ${match.m}`;\n\n      const players = [0,1].map(idx => {\n        let this_player = {\n          p:  (match.p[idx]? opts.members.filter(i => +i.id === match.p[idx])[0] : null), // record dati player\n          tds: '', // stringa numero testa di serie\n          title: '', // porzione bracket_title di questo player\n        };\n\n        if(opts.config.show_seeded && this_player.p && this_player.p?.ts !== null/*  && match.r === 1 */) {\n          this_player.tds = `<span class=\"brk-seeded\">${this_player.p.ts }</span> `;\n        }\n\n        if(match_status.defined) {\n          if(this_player.p) {\n            this_player.title = this_player.p.n + (match_status.isNoshow[idx]? ' (no show)' : '');\n          } else {\n            this_player.title = '[bye]';\n          }\n        }\n        return this_player;\n      });\n\n      if(match_status.defined) {\n        bracket_title += ': ' + [players[0].title, players[1].title]\n          .join((players[0].p && players[1].p)? ' vs ' : ' / ');\n      }\n\n      let wrapper_class = [];\n      if(match_status.isPlayed) {\n        wrapper_class.push('brk-played');\n      }\n      if(match_status.isBye[0]) {\n        wrapper_class.push('bye1');\n      } else if (match_status.isBye[1]) {\n        wrapper_class.push('bye2');\n      } else if (match_status.isDoubleNoshow) {\n        wrapper_class.push('no-show1', 'no-show2');\n      } else if (match_status.isNoshow[0]) {\n        wrapper_class.push('no-show1');\n      } else if (match_status.isNoshow[1]) {\n        wrapper_class.push('no-show2');\n      }\n\n      // extra_info class e data-*\n      let extra_attr = [];\n      if(opts.config.extra_info) {\n        const match_params = get_match_params(match, bracket_params),\n          child_match_status = get_match_status(\n            opts.matches.filter(match => match.m === match_params.child_match)[0]\n          );\n\n        if(!match_status.defined) {\n          wrapper_class.push('brk-undef');\n        }\n        if(child_match_status.isPlayed) {\n          wrapper_class.push('brk-cm-played');\n        }\n        extra_attr = [\n          `data-cm=\"${match_params.child_match}\"`\n        ];\n      }\n\n      const isByeOrNoshow = match_status.isBye[0] || match_status.isNoshow[0] || match_status.isBye[1] || match_status.isNoshow[1];\n\n      const players_rows = players.map((player, idx) => {\n\n        let isBye = match_status.isBye[idx],\n          isNoshow = match_status.isNoshow[idx],\n          // isBye_altro_player = match_status.isBye[idx === 0? 1 : 0],\n          // isNoshow_altro_player = match_status.isNoshow[idx === 0? 1 : 0],\n          player_class= idx === 0? 'one' : 'two';\n\n        return `<div class=\"brk-match-player ${player_class} ${match_status.winnerIdx === idx? 'winner' : ''}\" data-pid=\"${player.p?.id?? ''}\">\n          <div>\n            ${(isNoshow && opts.config.noshow_icon)? opts.config.noshow_icon : ''}\n            ${player.tds}${isBye? 'Bye' : (player.p?.n?? '')}\n          </div>\n        </div>\n        <div class=\"brk-match-score ${player_class} ${match_status.winnerIdx === idx? 'winner' : ''}\">\n          ${/* match.s[idx] ?? ((isBye_altro_player || isNoshow_altro_player)? '&ndash;' : '') */''}\n          ${match.s[idx] ?? (isByeOrNoshow? '&ndash;' : '')}\n        </div>`;\n\n      });\n\n\n      // data-p in `brk-match-wrapper` è usato come selettore per l'evidenziazione del percorso di un player\n      return `<div class=\"brk-match-wrapper ${wrapper_class.join(' ')}\"\n          data-p=\"${match.p.filter(pid => pid !== null).join(' ')}\" role=\"banner\">\n        <div class=\"brk-connector rear\" aria-hidden=\"true\"></div>\n        <div class=\"brk-match\" title=\"${bracket_title}\" data-m=\"${match.m}\" ${extra_attr.join(' ')}>\n          <div class=\"brk-match-idx\"><span>${match.m}</span></div>\n          ${players_rows.join('')}\n        </div>\n        <div class=\"brk-connector front\" aria-hidden=\"true\"></div>\n      </div>`;\n\n    }; // end brackets func\n\n\n  // ordinamento matches per match_id\n  opts.matches.sort((a,b) => a.m - b.m);\n\n  for( let r = 1; r <= num_rounds; r++ ) {\n    let round_name = round_namer(r, num_rounds);\n    if(round_name) {\n      round_name = `Round ${r}<br><strong>${round_name}</strong>`;\n    } else {\n      round_name = `Round ${r}`;\n    }\n\n\n    // partite del round\n    let partite_round = opts.matches.filter(p => +p.r === r);\n\n    // `data-r` è utilizzato per la navigazione da menu\n    bracket_container.insertAdjacentHTML('beforeend',\n      `<div class=\"brk-round-wrapper\">\n        <div class=\"brk-round-header\">${round_name}</div>\n        <div class=\"brk-round-inner-wrapper\" data-r=\"${r}\">\n          ${partite_round.map(brackets).join('')}\n        </div>\n      </div>`\n    );\n\n  } // end for\n\n  // aggiunta listener per clic su match o player\n  if(opts.config.player_callback && opts.config.player_cbk_selector && typeof opts.config.player_callback === 'function') {\n    bracket_container.querySelectorAll(opts.config.player_cbk_selector)\n      .forEach(item => {\n        item.classList.add('brk-has-cbk');\n        item.addEventListener('click', () => {\n          opts.config.player_callback(item);\n        }, false);\n      });\n\n  } else if (opts.config.match_callback && opts.config.match_cbk_selector && typeof opts.config.match_callback === 'function') {\n    bracket_container.querySelectorAll(opts.config.match_cbk_selector)\n      .forEach(item => {\n        item.classList.add('brk-has-cbk');\n        item.addEventListener('click', () => {\n          opts.config.match_callback(item);\n        }, false);\n      });\n  }\n\n\n  // drag to scroll\n  drag_scroller(opts.container.querySelector('.brk-container'));\n\n  nav(opts.container.querySelector('.brk-outer-wrapper'), num_rounds);\n\n}\n","// funzione per il trascinamento del riquadro\n// https://htmldom.dev/drag-to-scroll/\n\n// opzione alternativa: https://htmldom.dev/create-a-custom-scrollbar/\n\nexport default function (container) {\n\n  let pos = { top: 0, left: 0, x: 0, y: 0 };\n\n  const mouseMoveHandler = function (e) {\n    // How far the mouse has been moved\n    const dx = e.clientX - pos.x;\n    const dy = e.clientY - pos.y;\n\n    // Scroll the element\n    container.scrollTop = pos.top - dy;\n    container.scrollLeft = pos.left - dx;\n  };\n\n  const mouseUpHandler = function () {\n    container.removeEventListener('mousemove', mouseMoveHandler);\n    container.removeEventListener('mouseup', mouseUpHandler);\n\n    container.style.cursor = 'grab';\n    container.style.removeProperty('user-select');\n  };\n\n  const mouseDownHandler = function (e) {\n    container.style.cursor = 'grabbing';\n    container.style.userSelect = 'none';\n    pos = {\n      // The current scroll\n      left: container.scrollLeft,\n      top: container.scrollTop,\n      // Get the current mouse position\n      x: e.clientX,\n      y: e.clientY,\n    };\n\n    container.addEventListener('mousemove', mouseMoveHandler);\n    container.addEventListener('mouseup', mouseUpHandler);\n  };\n\n  container.addEventListener('mousedown', mouseDownHandler);\n}\n","export default function (outer_container, num_rounds) {\n\n  outer_container.insertAdjacentHTML('beforeend',\n    `<div class=\"brk-nav-outer\">\n      <div class=\"brk-nav-trigger\" role=\"button\" aria-label=\"Navigazione rounds\" aria-controls=\"brk-nav-menu\">\n        ${'<span></span>'.repeat(3)}\n      </div>\n    </div>\n    <nav id=\"brk-nav-menu\" class=\"brk-nav-menu\"></nav>`\n  );\n\n  let menu = outer_container.querySelector('.brk-nav-menu'),\n    trigger = outer_container.querySelector('.brk-nav-trigger');\n\n  for( let i = 1; i<= num_rounds; i++ ) {\n    menu.insertAdjacentHTML('beforeend',\n      `<button class=\"brk-nav-item\" type=\"button\" data-r=\"${i}\" aria-label=\"Vai al round ${i}\">Round ${i}</button>`\n    );\n  }\n\n  trigger.addEventListener('click', () => {\n    trigger.classList.toggle('open');\n    menu.classList.toggle('show');\n  }, false);\n\n\n  menu.querySelectorAll('.brk-nav-item').forEach(item => {\n    item.addEventListener('click', () => {\n      // primo match del round richiesto\n      const match_to_show = outer_container\n        .querySelector(`.brk-round-inner-wrapper[data-r=\"${item.dataset.r}\"] .brk-match`);\n\n      match_to_show.scrollIntoView({behavior: 'smooth', block: 'center', inline: 'center'});\n\n      menu.classList.remove('show');\n      trigger.classList.remove('open');\n    }, false);\n  });\n\n  // clic outside\n  document.body.addEventListener('click', e => {\n\n    // il secondo e il terzo caso sono ridondanti ma prevengono eventuali sovrapposizioni\n    if(!e.target.closest('.brk-nav-menu') &&\n      e.target !== trigger &&\n      !e.target.closest('.brk-nav-trigger') &&\n      trigger.classList.contains('open')\n    ) {\n      trigger.click();\n    }\n\n  }, false);\n\n  // esc key\n  document.body.addEventListener('keydown', function(e) {\n    if(e.key === 'Escape' && trigger.classList.contains('open')) {\n      trigger.click();\n    }\n  }, true);\n\n}\n","import data_generator from '../demo-src/brackets-data-generator';\nimport stringify from '../demo-src/stringify-replacer';\n\nimport get_bracket_params from '../../js/get-bracket-params';\nimport build_first_round from '../../js/build-first-round';\nimport build_brackets from '../../js/single-elimination-brackets';\n\n// TODO ottimizzare, riorganizzare variabili, ecc.\n// TODO rifare gioca round\n// TODO popup edit match\n\n(() => {\n  'use strict';\n  const json_partite_wrapper = document.getElementById('json-partite'),\n    json_iscritti_wrapper = document.getElementById('json-iscritti');\n\n  let data = {},\n    brk_params,\n    brackets_options = {},\n    matches = [], //match salvati nello storage\n    iscritti = []; //iscritti salvati nello storage\n\n  // impostazioni di configurazione dei bracket da unire a quelle del torneo\n  const demo_config = {\n    noshow_icon      : '<img src=\"/demo/icone-demo/noshow.svg\" class=\"brk-noshow-icon\" alt=\"noshow icon\">',\n    match_callback   : match_container => { // questo non ha effetto se player_callback è impostato\n      const data = match_container.dataset;\n      alert(`Match ${data.m}`);\n    },\n    // player_callback  : player_container => {\n    //   const data = player_container.dataset;\n    //   alert(`Player #${data.pid}`);\n    // }\n  };\n\n  // input generazione dati brackets\n  const input_num_iscritti = document.getElementById('num-iscritti'),\n    input_num_match_pers = document.getElementById('num-match'),\n    input_num_tds = document.getElementById('num-tds'),\n    input_show_tds = document.getElementById('show-tds');\n\n  // pulsanti\n  const btn_primo_round = document.querySelector('.primo-round'),\n    btn_gioca_round = document.querySelector('.gioca-round');\n\n\n  // verifica se un numero è primo. Usato per estrarre casualmente elementi\n  // https://stackoverflow.com/a/49842625/743443\n  const isPrime = num => { // returns boolean\n    if (num <= 1) return false; // negatives\n    if (num % 2 === 0 && num > 2) return false; // even numbers\n    const s = Math.sqrt(num); // store the square to loop faster\n    for(let i = 3; i <= s; i += 2) { // start from 3, stop at the square, increment in twos\n      if(num % i === 0) return false; // modulo shows a divisor was found\n    }\n    return true;\n  };\n\n  const crea_dati_demo = function() {\n\n    data = data_generator(\n      +input_num_iscritti.value,\n      +input_num_match_pers.value,\n      +input_num_tds.value,\n      input_show_tds.checked\n    );\n\n    brk_params = get_bracket_params({\n      num_iscritti: +input_num_iscritti.value\n    });\n\n    // const stringify = (data) => {\n    //   return JSON.stringify(data, null, 2);\n    // };\n\n    document.getElementById('json-parametri-demo').innerHTML = `\n      <div id=\"stats\" class=\"stats\"></div>\n      <h4>Parametri dati demo</h4>\n      <div class=\"json\">${stringify(data.demo_params)}</div>\n      <h4>Parametri torneo</h4>\n      <div class=\"json\">${stringify(data.config)}</div>\n    `;\n    document.getElementById('stats').innerHTML = data.stats.join('');\n\n    json_iscritti_wrapper.innerHTML = stringify(iscritti.length? iscritti : data.members);\n    json_partite_wrapper.innerHTML = stringify(matches.length? matches : data.matches);\n\n    // crea struttura vuota brackets\n    brackets_options = {\n      container   : document.getElementById('bracket-demo-container'),\n      members     : iscritti.length? iscritti : data.members,\n      matches     : matches.length? matches : data.matches,\n      config      : {...demo_config, ...data.config}\n    };\n\n    build_brackets(brackets_options);\n\n\n  }; // end crea_dati_demo\n\n  // =>> generazione dati brackets\n  document.querySelector('.genera-dati').addEventListener('click', () => {\n    if(!input_num_iscritti.checkValidity() ||\n      !input_num_match_pers.checkValidity() ||\n      !input_num_tds.checkValidity()\n    ) {\n      alert('Errore nei parametri');\n\n    // tds minore della metà degli iscritti\n    } else if(+input_num_tds.value > Math.floor(+input_num_iscritti.value/2)) {\n      alert('Il numero delle Teste di Serie deve essere una potenza di due e ' +\n        'deve essere minore della metà degli iscritti');\n\n    } else {\n      matches = [];\n      localStorage.removeItem('demo_matches');\n      iscritti = [];\n      localStorage.removeItem('demo_members');\n\n      crea_dati_demo();\n      btn_primo_round.disabled = false;\n      btn_gioca_round.disabled = true;\n\n      localStorage.setItem('demo_params', JSON.stringify({\n        input_num_iscritti: input_num_iscritti.value,\n        input_num_match_pers: input_num_match_pers.value,\n        input_num_tds: input_num_tds.value,\n        input_show_tds: input_show_tds.checked\n      }));\n    }\n  }, false);\n\n\n  // =>> pulsante generazione brackets\n  btn_primo_round.addEventListener('click', () => {\n\n    matches = build_first_round({\n      members        : data.members,\n      custom_matches : data.demo_params.custom_matches\n    });\n\n    brackets_options.matches = matches;\n    build_brackets(brackets_options);\n\n    localStorage.setItem('demo_matches', JSON.stringify(matches));\n    localStorage.setItem('demo_members', JSON.stringify(data.members));\n    json_partite_wrapper.innerHTML = stringify(matches);\n\n    btn_primo_round.disabled = true;\n    btn_gioca_round.disabled = false;\n\n  }, false);\n\n\n  // // =>> pulsante gioca round\n  // btn_gioca_round.addEventListener('click', () => {\n  //   last_round_idx = last_round_idx || get_last_round_idx();\n  //   const new_round_idx = last_round_idx + 1;\n\n  //   let last_match_id = matches.reduce((prev, curr) => {\n  //     return Math.max(prev, curr.m);\n  //   }, 0);\n\n  //   // aggiunta punteggio\n  //   const max_score = 9, min_score = 0;\n  //   matches.forEach((item, idx) => {\n  //     if(item.w === null) {\n  //       for(let i = 0; i < 2; i++) {\n  //         matches[idx].s\n  //           .push(Math.floor(Math.random() * (max_score - min_score + 1) + min_score));\n  //       }\n  //       // parità\n  //       if(matches[idx].s[0] === matches[idx].s[1]) {\n  //         matches[idx].s[0]++;\n  //       }\n\n  //       let winner_index = item.s.indexOf(Math.max(...item.s));\n  //       matches[idx].w = item.p[winner_index];\n\n  //       // dati prova noshow\n  //       // prime due partite round 2\n  //       let first_match_round_2 = brk_params.matches_round1 + 1;\n  //       if(item.m === first_match_round_2) {\n  //         matches[idx].w = item.p[1];\n  //         matches[idx].s = [];\n  //       }\n  //       if(item.m === first_match_round_2+1) { // doppio noshow\n  //         matches[idx].w = 0;\n  //         matches[idx].s = [];\n  //       }\n\n  //     }\n  //   });\n\n  //   // round successivi\n  //   if(last_round_idx < brk_params.num_rounds) {\n  //     let next_round = [];\n\n  //     const prev_round = matches.filter(item => item.r === last_round_idx);\n\n  //     for(let i = 0; i < prev_round.length; i = i + 2) {\n\n  //       let players = [\n  //         prev_round[i].w,\n  //         prev_round[i+1].w\n  //       ];\n\n  //       // random noshow\n  //       // viene incluso il bye se un numero a caso preso tra 0 e 10000 è primo\n  //       let isNoshow = isPrime(Math.floor(Math.random() * (10000 - 1 + 1) + 1)),\n  //         player_noshow = null, winner = null;\n  //       if (isNoshow) { // viene scelto a caso uno dei due giocatori\n  //         player_noshow = Math.floor(Math.random() * 2);\n  //         winner = player_noshow === 0? players[1] : players[0];\n  //       }\n\n  //       next_round.push({\n  //         r: new_round_idx,\n  //         m: ++last_match_id,\n  //         p: players,\n  //         s: [],\n  //         w: player_noshow === null? null : winner\n  //       });\n\n  //     } // end for\n\n  //     matches = matches.concat(next_round);\n\n  //   } // end if(new_round_idx < brk_params.num_rounds) {\n\n  //   brackets_options.matches = matches.slice(0);\n  //   build_brackets(brackets_options);\n  //   document.getElementById('json-partite').innerHTML = stringify(matches);\n  //   localStorage.setItem('demo_matches', JSON.stringify(matches));\n\n  //   if(last_round_idx === brk_params.num_rounds) {\n  //     btn_gioca_round.disabled = true;\n  //   }\n  //   last_round_idx++;\n\n  // }, false); // end btn_gioca_round listener\n\n  // =>> acquisisci dati da box\n  document.querySelector('.acquisisci-box-dati').addEventListener('click', () => {\n\n    iscritti = JSON.parse(json_iscritti_wrapper.innerText.replace(/(\\w+):/g, '\"$1\":')),\n    matches = JSON.parse(json_partite_wrapper.innerText.replace(/(\\w+):/g, '\"$1\":'));\n    localStorage.setItem('demo_matches', JSON.stringify(matches));\n    localStorage.setItem('demo_members', JSON.stringify(iscritti));\n\n    brackets_options.members = iscritti;\n    brackets_options.matches = matches;\n\n    build_brackets(brackets_options);\n  }, false);\n\n  // ==> recupero dati da localStorage\n  if(localStorage.demo_params) {\n    const stored_values         = JSON.parse(localStorage.demo_params);\n    input_num_iscritti.value    = stored_values.input_num_iscritti;\n    input_num_match_pers.value  = stored_values.input_num_match_pers;\n    input_num_tds.value         = stored_values.input_num_tds;\n    input_show_tds.checked      = stored_values.input_show_tds;\n  }\n\n  if(localStorage.demo_members) {\n    iscritti = JSON.parse(localStorage.demo_members);\n  }\n\n  if(localStorage.demo_matches) {\n    matches = JSON.parse(localStorage.demo_matches);\n    btn_primo_round.disabled = true;\n    btn_gioca_round.disabled = false;\n  }\n\n  crea_dati_demo(); // init\n})();\n","export default function (num_iscritti = 12, num_match_pers = 2, num_tds = 4, show_tds = true) {\n\n  // vedi `tracciati-json.md` per info sul tracciato dei dati\n\n  // impostazioni manuali partite\n  // gli id dei players devono essere compatibili con il valore num_iscritti\n  let custom_matches = [];\n\n  for (let i = 0; i < num_match_pers; i++) {\n    let this_match = [];\n    for(let j = 0; j < 2; j++) {\n      let player_id;\n      while (this_match.length < 2) {\n        player_id = Math.ceil(Math.random() * num_iscritti);\n        // evita duplicati\n\n        if(custom_matches.concat(this_match).flat().indexOf(player_id) === -1) {\n          this_match.push(player_id);\n        }\n      }\n    }\n    custom_matches.push(this_match);\n  }\n\n\n  // =>> ISCRITTI\n  let iscritti = [];\n  for(let i = 1; i <= num_iscritti; i++){\n\n    let nick =  i + ' Nickname';\n    if( i % 5 === 0 ){\n      nick = `${i} long long long long nickame`;\n    }\n\n    nick += i === num_iscritti? ' *** ultimo' : '';\n\n    iscritti.push({\n      id: i,\n      n: nick,\n      rk: Math.floor(Math.random() * 100),\n      ts: null\n    });\n  }\n\n  // assegnazione random TdS (non devono essere inclusi nei match personalizzati)\n  let tds_assegnate = 0; // è anche il valore gerarchico della tds\n  while (tds_assegnate < num_tds) {\n    let random_idx = Math.floor(Math.random() * iscritti.length);\n\n    if(custom_matches.flat().indexOf(iscritti[random_idx].id) === -1 && iscritti[random_idx].ts === null) {\n      iscritti[random_idx].ts = ++tds_assegnate;\n    }\n  }\n\n  const num_rounds = Math.ceil(Math.log2(num_iscritti));\n  const demo_config = {\n    show_seeded: show_tds\n  };\n\n  let num_players_round_1 = Math.pow(2, num_rounds),\n    num_partite = num_players_round_1 / 2;\n  let num_bye = num_players_round_1 - iscritti.length;\n  // let bye_at = num_partite - num_bye;\n\n\n  let stats = [ // dati statistici, per controllo generazione dati\n    `<ul>\n      <li>totale iscritti: <strong>${num_iscritti}</strong></li>\n      <li>players richiesti round 1: <strong>${num_players_round_1}</strong></li>\n      <li>totale partire round 1 round 1: <strong>${num_partite}</strong></li>\n      <li>round totali: <strong>${num_rounds}</strong></li>\n      <li>partite round 1 con bye: <strong>${num_bye}</strong></li>\n      <li>Match personalizzati: <strong>${custom_matches.length}</strong></li>\n    </ul>`\n  ];\n\n\n  return {\n    stats: stats,\n    demo_params: {\n      num_iscritti: num_iscritti,\n      num_tds: num_tds,\n      custom_matches: custom_matches\n    },\n    config:  demo_config,\n    members: iscritti,\n    matches: []\n  };\n}\n","/*\n  genera le partire del primo round e restituisce il relativo array\n*/\nimport shuffle from './src/shuffle-array';\nimport get_bracket_params, {get_match_params} from './get-bracket-params';\nimport calcolo_tds from './src/calcolo-TdS';\n\nexport default function(opts = {members: [], custom_matches: []}) {\n  /*\n    opts = {\n      members: [\n        {\n          \"id\": 12,\n          \"n\": \"SchiappettaTheBoss\",\n          \"rk\": 1,\n          \"ts\": 1\n        },\n        ...\n      ],\n\n      custom_matches : [\n        [123, 124],      <== id dei giocatori da inserire nella stessa partita\n        [125],           <== partita con bye\n        ...\n      ]\n    }\n\n    // array matches da restiture (vedi docs -> tracciati-json.md):\n    [\n      {\n        r: 1,          <== numero round (sempre 1 in questa procedura)\n        m: n,          <== match id (progressivo dei match)\n        p: [p1, p2],   <== array dei player, p2 è null in caso di bye\n        s: [],         <== score, array vuoto in questa procedura\n        w: null | p1   <== winner, null o p1 se è un bye\n      },\n      ...\n    ]\n\n  */\n\n  const default_opts = {\n    members: [],\n    custom_matches: []\n  };\n  opts = Object.assign({}, default_opts, opts);\n\n  // calcolo numero giocatori necessari, numero rounds, partite, bye, ecc\n  const bracket_params = get_bracket_params({num_iscritti: opts.members.length});\n\n  // =>> bye da assegnare\n  // quelle riservate per i custom_matches vengono momentaneamente separate\n  // ad evitare che vengano utilizzate dalle TdS\n  let bye_da_assegnare = bracket_params.num_bye,\n    bye_cm = 0;\n  if(opts.custom_matches.length) {\n    // i custom matches con bye sono quelli con un solo elemento\n    bye_cm = opts.custom_matches.filter(item => item.length === 1).length;\n    bye_da_assegnare -= bye_cm;\n  }\n\n\n  // console.log('bracket_params', bracket_params);\n  // console.log('num members', opts.members.length);\n  // console.log('num custom_matches', opts.custom_matches.length);\n  // console.log('num_tds', opts.members.filter(item => item.ts !== null).length);\n\n  // =>> sparse array partite e contatore id match\n  let matches = Array(bracket_params.matches_round1);\n\n  // =>> array degli iscritti ordinati per tds ASC e ranking DESC\n  let iscritti = opts.members.slice(0);\n  iscritti.sort((a,b) => {\n    let ts = (a.ts === null) - (b.ts === null) || a.ts - b.ts;\n    let rk = b.rk - a.rk;\n    return ts || rk;\n  });\n\n\n  // =>> conteggio e controlli teste di serie\n  const num_tds = iscritti.filter(item => item.ts !== null).length;\n\n  // le teste di serie devono essere una potenza di 2\n  // https://stackoverflow.com/a/30924352/743443\n  if(Math.log2(num_tds) % 1 !== 0) {\n    throw new Error('Le TdS non sono un potenza di 2' );\n  }\n\n  // genera l'oggetto match base\n  let round2_players = {}; // contiene i player da impostare nel round 2 in seguito a bye nel round 1\n\n  const createMatch = (round, match_id, players, winner) => {\n    const match_params = get_match_params({m: match_id, r: round}, bracket_params);\n\n    // in caso di bye, vengono impostati il vincitore e il player nel match figlio\n    if(winner) {\n      if(!round2_players[match_params.child_match]) {\n        round2_players[match_params.child_match] = [];\n      }\n      round2_players[match_params.child_match][match_id % 2 !== 0? 0 : 1] = winner;\n    }\n\n\n    return {\n      r: round,\n      m: match_id,\n      p: players,\n      s: [],\n      w: winner,\n      child_match: match_params.child_match\n    };\n  };\n\n  // match id delle partite con TdS\n  /*\n    è un array con questa forma:\n      [\n        {\n          tds       <== valore tds\n          match_id  <== match_id della partita in cui collocare la tds\n        },\n        ...\n      ]\n  */\n  const tds_position = calcolo_tds(bracket_params.matches_round1, num_tds);\n  let tds_assegnate = 0; // serve a saltare eventuali bòocchi di codici non necessari\n  // =>> funzione creazione match\n  // nel caso di bye inserire solo l'id 1 o impostare a null il secondo\n  const addMatchRound1 = (player1, player2 = null, random_match = false) => {\n\n    let match_id;\n\n    if(tds_assegnate < num_tds) { // salta questo blocco se non necessario\n      // verifica se uno due player è tds (NB: può essere uno solo)\n      let playerTS = [player1, player2].filter(item => item !== null && item.ts !== null);\n      if(playerTS.length) {\n        match_id = tds_position.filter(item => item.tds === playerTS[0].ts)[0].match_id;\n        tds_assegnate++;\n      }\n    }\n\n    // se il match_id non è ancora definito (non tds), viene recuperato un\n    // indice disponibile (in modo random se `random_match` === true) nell'array matches\n    if(match_id === undefined) {\n      let idx;\n      if(random_match) {\n\n        let empty_indexes = [...matches]\n          .map((item, idx) => item === undefined? idx : null)\n          .filter(item => item !== null);\n\n        if (!empty_indexes.length) {\n          throw new Error('addMatchRound1: nessun slot vuoto disponibile (random_match)');\n        }\n        idx = empty_indexes[Math.floor(Math.random() * empty_indexes.length)];\n      } else {\n        idx = matches.findIndex(item => item === undefined);\n        if (idx === -1) {\n          throw new Error('addMatchRound1: nessun slot vuoto disponibile' );\n        }\n      }\n\n      match_id = idx + 1;\n    }\n\n    // child_match viene generato solo per la registrazione sul db, non è necessario\n    // per il rendering del bracket\n    matches[match_id - 1] = createMatch(\n      /* round    */ 1,\n      /* match_id */ match_id,\n      /* players  */ [player1.id, (player2? player2.id : null)],\n      /* winner   */ player2 !== null? null : player1.id\n    );\n  };\n\n\n  // =>> aggiunta teste di serie\n  // (ad esclusione di quelle eventualmente presenti nei custom_matches)\n  // queste assegnazioni vanno per prime, per evitare che le posizioni\n  // delle TdS siano occupate da altre partite\n  iscritti.filter(item => item.ts !== null).forEach(player1 => {\n    if(opts.custom_matches.flat().indexOf(player1.id) === -1) {\n      let player2;\n\n      if(bye_da_assegnare) {\n        player2 = null;\n        bye_da_assegnare--;\n\n      } else {\n        // player2 viene preso alla fine, l'array iscritti è ordinato per ranking DESC\n        // quindi ha il ranking più basso disponibile\n        player2 = iscritti.filter(item => item.ts === null).slice(-1)[0];\n        iscritti.splice(iscritti.findIndex(item => item.id === player2.id), 1);\n      }\n\n      // rimozione di player1 dall'array iscritti\n      iscritti.splice(iscritti.findIndex(item => item.id === player1.id), 1);\n\n      addMatchRound1(player1, player2? player2 : null);\n\n    }\n  }); // end tds\n\n  // i bye riservati alle cm vengono riaggiunti al totale dei bye disponibili\n  bye_da_assegnare += bye_cm;\n\n  // =>> aggiunta custom_matches\n  // ed eliminazione dall'array iscritti (se c'è un solo giocatore si tratta di un bye)\n  // se il match contiene una tds viene utilizzata la posizione in tds_position\n  // queste assegnazioni vanno eseguite subito dopo le TdS per il corretto conteggio\n  // dei bye disponibili\n  opts.custom_matches.forEach( item => {\n\n    // recupero e rimozione dei record relativi dall'array iscritti\n    let players = [];\n    item.forEach(player_id => {\n      players.push(\n        iscritti.splice(iscritti.findIndex(item => item.id === player_id), 1)[0]\n      );\n    });\n\n\n    if(players.length === 2 && players[0].ts !== null && players[1].ts !== null ) {\n\n      throw new Error('addMatchRound1: custom match con due TdS ' +\n        `(#${players[0].id} “${players[0].n}” vs #${players[1].id} “${players[1].n}”)` );\n    }\n\n    if(players.length === 1) {\n      if(bye_da_assegnare <= 0) {\n        throw new Error(`custom matches: Bye non disponibile (match con #${players[0].id} “${players[0].n}”)` );\n      }\n      bye_da_assegnare--;\n      players.push(null);\n    }\n    addMatchRound1(...players, true);\n  }); // end custom_matches\n\n\n  // =>> aggiunta altre partite con bye\n  // vengono assegnati ai giocatori con ranking più alto\n  // (l'array iscritti è già stato ordinato in modo che i ranking più alti siano\n  // all'inizio, in modo che abbiano la preferenza nell'assegnazione dei bye)\n  iscritti.splice(0, bye_da_assegnare).forEach(player => {\n    addMatchRound1(player, null, true);\n  });\n\n  // =>> array degli iscritti RIMANENTI randomizzato\n  iscritti = shuffle(iscritti);\n\n\n  // =>> il numero degli iscritti (esclusi i bye) deve essere pari\n  if((iscritti.length) % 2 !== 0) {\n    throw new Error('Il numero di iscritti risultante dalle precedenti elaborazioni non è pari');\n  }\n\n  // =>> aggiunta nel round 1 degli iscritti non tds o cm\n  if(iscritti.length) {\n    iscritti.forEach((player, idx) => {\n      if(idx % 2 === 0) { // salta gli indici pari\n        addMatchRound1(player, iscritti[idx+1]);\n      }\n    });\n  }\n\n  // console.log('total matches',  matches.length);\n  // console.log('not empty matches: ', matches.filter(item => item).length);\n  // console.log('tds_position', tds_position);\n  // console.log(matches);\n\n  // =>> controlli finali\n  if(matches.length !== bracket_params.matches_round1) {\n    throw new Error(`Sono presenti ${matches.length} partite invece di ${bracket_params.matches_round1}`);\n  }\n  if(matches.findIndex(item => item === undefined) !== -1) {\n    throw new Error('Sono presenti partite non definite');\n  }\n\n  // matches turni successivi\n  let num_matches_round = bracket_params.matches_round1, // matchs round corrente\n    tot_matches = num_matches_round, // match già aggiunti a matches\n    match_id = num_matches_round + 1; // prossimo match_id\n\n  for( let round = 2; round <= bracket_params.num_rounds; round++) {\n\n    // matches di questo round\n    num_matches_round = num_matches_round / 2;\n    tot_matches += num_matches_round;\n\n    for(let i = match_id; i <= tot_matches; i++) {\n      // conversione eventuali undefined -> null\n      if(round2_players[i]) {\n        round2_players[i][0] ??= null;\n        round2_players[i][1] ??= null;\n      }\n      matches.push(\n        createMatch(\n          /* round    */ round,\n          /* match_id */ i,\n          /* players  */ round2_players[i]? round2_players[i] : [],\n          /* winner   */ null\n        )\n      );\n    }\n    match_id += num_matches_round;\n  }\n  return matches;\n}\n","// calcola la sequenze delle teste di serie e il loro\n// posizionamento nel primo round\n\n// v1: sequenza TdS hardcoded\n\nexport default function (num_matches = 0, num_tds = 0) {\n\n  let match_id = 1,\n    tds_position = [];\n\n  if(num_matches && num_tds) {\n    const step_tds = num_matches / num_tds,\n      tds_seq = {\n        2:  [1, 2],\n        4:  [1, 4, 3, 2],\n        8:  [1, 8, 5, 4, 3, 6, 7, 2],\n        16: [1, 16, 8, 9, 5, 12, 4, 13, 6, 11, 3, 14, 7, 10, 15, 2],\n        32: [1, 32, 17, 16, 9, 24, 25, 8, 5, 28, 21, 12, 13, 20, 29, 4, 3, 30, 19, 14, 11, 22, 27, 6, 7, 26, 23, 10, 15, 18, 31, 2],\n        64: [1, 64, 33, 32, 17, 48, 49, 16, 9, 56, 41, 24, 25, 40, 57, 8, 5, 60, 37, 28, 21, 44, 53, 12, 13, 52, 45, 20, 29, 36, 61, 4, 3, 62, 35, 30, 19, 46, 51, 14, 11, 54, 43, 22, 27, 38, 59, 6, 7, 58, 39, 26, 23, 42, 55, 10, 15, 50, 47, 18, 31, 34, 63, 2]\n      };\n\n    for(let t = 0; t < num_tds; t++) {\n\n      // al superamento della metà delle TdS viene aggiunto un intervallo extra\n      // per simmetria del posizionamento rispetto alla metà del tabellone\n      if(t === num_tds/2) {\n        match_id += step_tds - 1;\n      }\n\n      tds_position.push({\n        tds: tds_seq[num_tds][t],\n        match_id: match_id,\n      });\n\n      match_id += step_tds;\n    }\n  }\n  return tds_position;\n}\n","export default function (array) {\n  var currentIndex = array.length,  randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n"],"names":["data","JSON","stringify","key","value","indexOf","replace","opts","Object","assign","num_iscritti","bracket_params","num_rounds","Math","ceil","log2","num_players","matches_round1","num_bye","pow","get_match_params","match","match_params","child_match","m","next_round","r","current_round","tot_rounds","round_name","status","isBye","p","length","w","isPlayed","winnerIdx","isNoshow","s","isDoubleNoshow","defined","config","show_seeded","noshow_icon","bracket_callback","match_cbk_selector","player_callback","player_cbk_selector","extra_info","members","container","innerHTML","insertAdjacentHTML","bracket_container","querySelector","get_bracket_params","brackets","match_status","get_match_status","bracket_title","players","map","idx","this_player","filter","i","id","tds","title","ts","n","join","wrapper_class","push","extra_attr","child_match_status","matches","isByeOrNoshow","players_rows","player","player_class","pid","sort","a","b","round_namer","partite_round","querySelectorAll","forEach","item","classList","add","addEventListener","match_callback","pos","top","left","x","y","mouseMoveHandler","e","dx","clientX","dy","clientY","scrollTop","scrollLeft","mouseUpHandler","removeEventListener","style","cursor","removeProperty","userSelect","drag_scroller","outer_container","repeat","menu","trigger","toggle","dataset","scrollIntoView","behavior","block","inline","remove","document","body","target","closest","contains","click","nav","json_partite_wrapper","getElementById","json_iscritti_wrapper","brackets_options","iscritti","demo_config","match_container","alert","input_num_iscritti","input_num_match_pers","input_num_tds","input_show_tds","btn_primo_round","btn_gioca_round","crea_dati_demo","num_match_pers","num_tds","show_tds","custom_matches","this_match","j","player_id","random","concat","flat","nick","rk","floor","tds_assegnate","random_idx","num_players_round_1","stats","demo_params","data_generator","checked","build_brackets","checkValidity","localStorage","removeItem","disabled","setItem","bye_da_assegnare","bye_cm","Array","slice","Error","round2_players","createMatch","round","match_id","winner","tds_position","num_matches","step_tds","tds_seq","t","calcolo_tds","addMatchRound1","player1","player2","random_match","playerTS","undefined","empty_indexes","findIndex","splice","array","randomIndex","currentIndex","shuffle","num_matches_round","tot_matches","build_first_round","parse","innerText","stored_values","demo_members","demo_matches"],"mappings":"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"}